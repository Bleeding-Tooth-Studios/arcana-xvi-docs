"use strict";(self.webpackChunkarcana_xvi_docs=self.webpackChunkarcana_xvi_docs||[]).push([[1241],{5796:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"intro/flamework","title":"Modded Flamework","description":"(in a nutshell)","source":"@site/docs/intro/flamework.md","sourceDirName":"intro","slug":"/intro/flamework","permalink":"/arcana-xvi-docs/docs/intro/flamework","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro/flamework.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Plop Files","permalink":"/arcana-xvi-docs/docs/intro/plopfiles"},"next":{"title":"Shared-Components","permalink":"/arcana-xvi-docs/docs/intro/sharedcomponents"}}');var i=t(4848),o=t(8453);const s={},a="Modded Flamework",c={},l=[{value:"Singletons",id:"singletons",level:2},{value:"LifeCycle Functions",id:"lifecycle-functions",level:3},{value:"Components",id:"components",level:2},{value:"Cleaning Up",id:"cleaning-up",level:2},{value:"Packages",id:"packages",level:2},{value:"Immut",id:"immut",level:3},{value:"Charm",id:"charm",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"modded-flamework",children:"Modded Flamework"})}),"\n",(0,i.jsx)(n.p,{children:"(in a nutshell)"}),"\n",(0,i.jsx)(n.h2,{id:"singletons",children:"Singletons"}),"\n",(0,i.jsx)(n.p,{children:"Services for server and Controllers for client"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'import { Service, OnTick } from "@flamework/core";\n\n@Service()\nexport class MyService implements OnTick {\n\tonTick(dt: number) {\n\t\tprint("My service is ticking", dt);\n\t}\n}\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'import { Service, OnStart } from "@flamework/core";\n\n@Controller()\nexport class MyController implements OnStart, OnRender {\n    onStart() {\n\t\tprint("I ran once on start! And I\'m clientside!");\n\t}\n     onRender(){\n        print("I\'m gonna print sooo many times")\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"lifecycle-functions",children:"LifeCycle Functions"}),"\n",(0,i.jsx)(n.p,{children:"OnStart (runs on start)\nOnInit (usage not recommended)\nOnTick (equivalent to RunService.Heartbeat)\nOnPhysics (equivalent to RunService.Stepped, serverside)\nOnRender (equivalent to Runservice.RenderStepped, clientside)"}),"\n",(0,i.jsx)(n.h2,{id:"components",children:"Components"}),"\n",(0,i.jsx)(n.p,{children:"Components are pieces of code attached to an instance."}),"\n",(0,i.jsx)(n.p,{children:'In arcana-xvi they\'re indicated by the "Behavior" name suffix'}),"\n",(0,i.jsx)(n.h2,{id:"cleaning-up",children:"Cleaning Up"}),"\n",(0,i.jsx)(n.p,{children:"Pass every unused connection and instances to Maid as to not clog memory."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"const maid = new Maid()\nmaid.DoCleaning()\n"})}),"\n",(0,i.jsx)(n.h2,{id:"packages",children:"Packages"}),"\n",(0,i.jsx)(n.h3,{id:"immut",children:"Immut"}),"\n",(0,i.jsx)(n.h3,{id:"charm",children:"Charm"})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var r=t(6540);const i={},o=r.createContext(i);function s(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);